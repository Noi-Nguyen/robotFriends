{"version":3,"sources":["component/Card.js","component/CardList.js","component/ErrorBoundry.js","component/SearchBox.js","component/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","href","alt","src","CardList","cardComponents","robots","map","val","ind","ErrorBoundary","props","state","hasError","this","setState","children","Component","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filterRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAeeA,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAKC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACtB,OACI,qBAAKC,UAAU,mDAAf,SACI,oBAAGC,KAAI,+BAA0BJ,EAA1B,YAAP,UACI,qBAAKK,IAAM,QAAQC,IAAG,+BAA4BN,EAA5B,cACtB,gCACA,6BAAKC,IACL,6BAAKC,aCMNK,EAVE,SAAC,GAAgB,IACxBC,EADuB,EAAZC,OACaC,KAAK,SAACC,EAAIC,GACpC,OAAO,cAAC,EAAD,CAAgBZ,GAAMW,EAAIX,GAAIC,KAAQU,EAAIV,KAAMC,MAASS,EAAIT,OAAlDU,MAEtB,OACI,8BACKJ,KCYEK,G,yDAlBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTC,UAAU,GAHA,E,qDAMlB,WACIC,KAAKC,SAAS,CAACF,UAAS,M,oBAE5B,WACI,OAAIC,KAAKF,MAAMC,SAEJ,wFAGJC,KAAKH,MAAMK,a,GAhBEC,cCWbC,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKpB,UAAY,MAAjB,SACI,uBAAOA,UAAU,mCACjBqB,KAAK,SACLC,YAAc,eACdC,SAAYH,OCETI,G,OARA,SAACb,GACZ,OACA,qBAAKc,MAAO,CAAEC,UAAW,SAAUC,OAAQ,aAAcC,OAAQ,SAAjE,SACKjB,EAAMK,aCgDAa,E,kDA7CX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKhB,SAAS,CAACI,YAAaY,EAAMC,OAAOC,SAZzC,EAAKrB,MAAQ,CACTN,OAAS,GACTa,YAAa,IAJP,E,qDAOd,WAAoB,IAAD,OACfe,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKvB,SAAS,CAACT,OAAOgC,S,oBAMzC,WAAS,IAAD,EAC0BxB,KAAKF,MAA5BN,EADH,EACGA,OAAQa,EADX,EACWA,YACToB,EAAejC,EAAOkC,QAAO,SAAAC,GAC/B,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASxB,EAAYuB,kBAEzD,OAAKpC,EAAOsC,OAUA,sBAAK5C,UAAW,KAAhB,UACI,oBAAIA,UAAU,WAAd,2BACA,cAAC,EAAD,CAAWoB,aAAcN,KAAKgB,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQiC,WAb9B,8BACI,oBAAIvC,UAAU,cAAd,+B,GAzBNiB,aCKH4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM3BZ,M","file":"static/js/main.d0454cf5.chunk.js","sourcesContent":["import React from 'react';\nconst Card = ({id , name, email}) =>{\n    return (\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <a href={`https://robohash.org/${id}?200x200`}> \n                <img alt = 'robot' src = {`https://robohash.org/${id}?200x200`}/>\n                <div>\n                <h1>{name}</h1>\n                <h2>{email}</h2>\n                </div>\n            </a>\n\n        </div>\n    )\n}\nexport default Card;","import react from 'react';\nimport Card from \"./Card\";\n\n\nconst CardList = ( { robots }) =>{\n    const cardComponents = robots.map( (val,ind) => {\n        return <Card key={ind} id = {val.id} name = {val.name} email = {val.email}/>\n    });\n    return (\n        <div>\n            {cardComponents}\n        </div>\n    )\n}\nexport default CardList;","import { render } from '@testing-library/react';\nimport React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n    componentDidCatch(){\n        this.setState({hasError:true})\n    }\n    render(){\n        if (this.state.hasError)\n        {\n            return <h1>We have some issues. We appologise for this inconvence</h1>\n        }\n        else\n        return this.props.children\n    }\n}\nexport default ErrorBoundary;","import React from 'react';\nimport App from '../container/App'\nconst SearchBox = ({searchField, searchChange}) =>{\n    return (\n        <div className = 'pa2'> \n            <input className='b-green bg-lightest-blue  pa3 ba' \n            type='search' \n            placeholder = 'Search robot'\n            onChange = {searchChange}\n            ></input>\n        </div>\n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) =>{\n    return(\n    <div style={{ overflowY: 'scroll', border: '5px black ', height: '500px'}}>\n        {props.children}\n    </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../component/CardList';\n//import {robots} from \"./robots\";\nimport ErrorBoundary from '../component/ErrorBoundry'\nimport SearchBox from \"../component/SearchBox\";\nimport './App.css'\nimport Scroll from '../component/Scroll'\nclass App extends Component{\n    constructor() {\n        super();\n        this.state = {\n            robots : [],\n            searchField: ''\n        }\n    }\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({robots:users}))\n\n    }\n    onSearchChange = (event) =>{\n        this.setState({searchField: event.target.value});\n    }\n    render(){\n        const {robots, searchField} = this.state;\n        const filterRobots = robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\n        });\n        if (!robots.length){\n                    return(\n                    <div>\n                        <h1 className='tc title f2'>Loading ...</h1>\n                    </div>\n                )\n            }\n            else\n            {\n                return(\n                    <div className= 'tc'>\n                        <h1 className='title f2'>Robot friends</h1>\n                        <SearchBox searchChange={this.onSearchChange}/>\n                        <Scroll>\n                            <ErrorBoundary>\n                                <CardList robots={filterRobots} />\n                            </ErrorBoundary>\n                        </Scroll>\n                    </div>\n            )\n        }\n    }\n }\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from \"./container/App\";\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}