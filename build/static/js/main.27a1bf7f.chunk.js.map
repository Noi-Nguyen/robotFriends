{"version":3,"sources":["component/Card.js","component/CardList.js","component/SearchBox.js","component/Scroll.js","container/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","cardComponents","robots","map","val","ind","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filterRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAYeA,EAXF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,GAAKC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,MACtB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAM,QAAQC,IAAG,+BAA4BL,EAA5B,cACtB,gCACI,6BAAKC,IACL,6BAAKC,WCONI,EAVE,SAAC,GAAgB,IACxBC,EADuB,EAAZC,OACaC,KAAK,SAACC,EAAIC,GACpC,OAAO,cAAC,EAAD,CAAgBX,GAAMU,EAAIV,GAAIC,KAAQS,EAAIT,KAAMC,MAASQ,EAAIR,OAAlDS,MAEtB,OACI,8BACKJ,KCIEK,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKX,UAAY,MAAjB,SACI,uBAAOA,UAAU,mCACjBY,KAAK,SACLC,YAAc,eACdC,SAAYH,OCETI,G,MARA,SAACC,GACZ,OACA,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,aAAcC,OAAQ,SAAjE,SACKJ,EAAMK,aC6CAC,E,kDA3CX,aAAe,IAAD,8BACV,gBAYJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAZzC,EAAKC,MAAQ,CACTvB,OAAS,GACTK,YAAa,IAJP,E,qDAOd,WAAoB,IAAD,OACfmB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAACpB,OAAO4B,S,oBAMzC,WAAS,IAAD,EAC0BC,KAAKN,MAA5BvB,EADH,EACGA,OAAQK,EADX,EACWA,YACTyB,EAAe9B,EAAO+B,QAAO,SAAAC,GAC/B,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS7B,EAAY4B,kBAEzD,OAAKjC,EAAOmC,OAUA,sBAAKxC,UAAW,KAAhB,UACI,oBAAIA,UAAU,WAAd,2BACA,cAAC,EAAD,CAAWW,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUlB,OAAQ8B,SAZ1B,8BACI,oBAAInC,UAAU,cAAd,+B,GAzBNyC,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM3BZ,M","file":"static/js/main.27a1bf7f.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card = ({id , name, email}) =>{\r\n    return (\r\n        <div className='bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt = 'robot' src = {`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h1>{name}</h1>\r\n                <h2>{email}</h2>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import react from 'react';\r\nimport Card from \"./Card\";\r\n\r\n\r\nconst CardList = ( { robots }) =>{\r\n    const cardComponents = robots.map( (val,ind) => {\r\n        return <Card key={ind} id = {val.id} name = {val.name} email = {val.email}/>\r\n    });\r\n    return (\r\n        <div>\r\n            {cardComponents}\r\n        </div>\r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\nimport App from '../container/App'\r\nconst SearchBox = ({searchField, searchChange}) =>{\r\n    return (\r\n        <div className = 'pa2'> \r\n            <input className='b-green bg-lightest-blue  pa3 ba' \r\n            type='search' \r\n            placeholder = 'Search robot'\r\n            onChange = {searchChange}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) =>{\r\n    return(\r\n    <div style={{ overflowY: 'scroll', border: '5px black ', height: '500px'}}>\r\n        {props.children}\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../component/CardList';\r\n//import {robots} from \"./robots\";\r\nimport SearchBox from \"../component/SearchBox\";\r\nimport './App.css'\r\nimport Scroll from '../component/Scroll'\r\nclass App extends Component{\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchField: ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({robots:users}))\r\n\r\n    }\r\n    onSearchChange = (event) =>{\r\n        this.setState({searchField: event.target.value});\r\n    }\r\n    render(){\r\n        const {robots, searchField} = this.state;\r\n        const filterRobots = robots.filter(robot=>{\r\n            return robot.name.toLowerCase().includes(searchField.toLowerCase());\r\n        });\r\n        if (!robots.length){\r\n                    return(\r\n                    <div>\r\n                        <h1 className='tc title f2'>Loading ...</h1>\r\n                    </div>\r\n                )\r\n            }\r\n            else\r\n            {\r\n                return(\r\n                    <div className= 'tc'>\r\n                        <h1 className='title f2'>Robot friends</h1>\r\n                        <SearchBox searchChange={this.onSearchChange}/>\r\n                        <Scroll>\r\n                            <CardList robots={filterRobots} />\r\n                        </Scroll>\r\n                    </div>\r\n            )\r\n        }\r\n    }\r\n }\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./container/App\";\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'tachyons';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  ,document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}